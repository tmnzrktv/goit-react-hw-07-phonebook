{"version":3,"sources":["Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Redux/Phonebook/phonebook-actions.js","Redux/Phonebook/phonebook-operations.js","Component/СontactForm/ContactForm.js","Component/ContactList/ContactList.js","Component/Filter/Filter.js","App.js","Redux/Phonebook/phonebook-reducer.js","Redux/store.js","index.js","Component/СontactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","get","then","data","catch","error","contact","name","number","post","id","delete","ContactForm","state","handleChange","event","currentTarget","value","setState","handleSumbit","preventDefault","reset","checkDuplicateContacts","props","onSubmit","newContact","existedContacts","isDuplicateNumber","find","isDuplicateName","toLowerCase","alert","this","className","styles","form__label","form__input","type","pattern","title","required","onChange","form__button","Component","connect","phonebook","items","text","phonebookOperations","ContactList","fetchContacts","onDeleteContact","contacts","isLoadingContacts","map","contacts__item","contacts__button","onClick","getVisibleItems","allItems","filter","normalizedFilter","item","includes","loading","e","filter__input","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f8521cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3nnnn\",\"contacts__item\":\"ContactList_contacts__item__21SKQ\",\"contacts__button\":\"ContactList_contacts__button__3KK4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__CMHC3\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n    'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n    'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n    'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n    'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('phonebook/filter');\n\n// export default {\n//     addContact,\n//     deleteContact,\n//     changeFilter,\n//     addContactRequest,\n//     addContactSuccess,\n//     addContactError,\n// };\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// export const deleteContact = createAction('phonebook/delete');\n\n// const addContact = createAction('phonebook/add', data => ({\n//     payload: {\n//         name: data.name,\n//         number: data.number,\n//         id: uuidv4(),\n//     },\n// }));\n\n// const addContact = data => ({\n//     type: types.ADD,\n//     payload: {\n//         name: data.name,\n//         number: data.number,\n//         id: uuidv4(),\n//     },\n// });\n\n// const deleteContact = contactId => ({\n//     type: types.DELETE,\n//     payload: contactId,\n// });\n\n// const changeFilter = value => ({\n//     type: types.CHANGE_FILTER,\n//     payload: value,\n// });\n","import axios from 'axios';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n} from '../Phonebook/phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:3004/';\n\nconst fetchContacts = () => dispatch => {\n    dispatch(fetchContactsRequest());\n\n    return axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n        .catch(error => fetchContactsError(error));\n};\n\nconst addContact = data => dispatch => {\n    const contact = {\n        name: data.name,\n        number: data.number,\n    };\n\n    dispatch(addContactRequest());\n\n    return axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n    dispatch(deleteContactRequest());\n\n    return axios\n        .delete(`/contacts/${id}`)\n        .then(() => dispatch(deleteContactSuccess(id)))\n        .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport default {\n    fetchContacts,\n    addContact,\n    deleteContact,\n};\n","import React, { Component } from 'react';\nimport styles from '../СontactForm/ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../Redux/Phonebook/phonebook-operations';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n    };\n\n    handleSumbit = event => {\n        event.preventDefault();\n        this.reset();\n\n        if (this.checkDuplicateContacts(this.state)) {\n            return;\n        }\n        this.props.onSubmit(this.state);\n    };\n\n    checkDuplicateContacts = newContact => {\n        const { existedContacts } = this.props;\n        const isDuplicateNumber = existedContacts.find(\n            ({ number }) => number === newContact.number,\n        );\n        const isDuplicateName = existedContacts.find(\n            ({ name }) => name.toLowerCase() === newContact.name.toLowerCase(),\n        );\n\n        if (isDuplicateNumber || isDuplicateName) {\n            alert('This number is already in contacts.');\n            return true;\n        }\n    };\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <form onSubmit={this.handleSumbit}>\n                    <label className={styles.form__label}>\n                        Name\n                        <input\n                            className={styles.form__input}\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                            required\n                            value={this.state.name}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n\n                    <label className={styles.form__label}>\n                        Number\n                        <input\n                            className={styles.form__input}\n                            type=\"tel\"\n                            name=\"number\"\n                            // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n                            required\n                            value={this.state.number}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n                    <button className={styles.form__button} type=\"submit\">\n                        Add contact\n                    </button>\n                </form>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    existedContacts: state.phonebook.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: text => dispatch(phonebookOperations.addContact(text)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React, { Component } from 'react';\nimport styles from '../ContactList/ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../Redux/Phonebook/phonebook-operations';\n\nclass ContactList extends Component {\n    componentDidMount() {\n        this.props.fetchContacts();\n    }\n\n    render() {\n        const { items, onDeleteContact } = this.props;\n        return (\n            <ul className={styles.contacts}>\n                {this.props.isLoadingContacts && <h1>Загружаем...</h1>}\n                {items.map(({ id, name, number }) => {\n                    return (\n                        <li className={styles.contacts__item} key={id}>\n                            <span>\n                                {name} : {number}\n                            </span>\n                            <button\n                                className={styles.contacts__button}\n                                onClick={() => onDeleteContact(id)}\n                            >\n                                Удалить\n                            </button>\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nconst getVisibleItems = (allItems, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allItems.filter(item =>\n        item.name.toLowerCase().includes(normalizedFilter),\n    );\n};\n\nconst mapStateToProps = ({ phonebook: { items, filter, loading } }) => ({\n    items: getVisibleItems(items, filter),\n    isLoadingContacts: loading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: id => dispatch(phonebookOperations.deleteContact(id)),\n    fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }),\n    ),\n    onDeleteContact: PropTypes.func,\n};\n","import React from 'react';\nimport styles from '../Filter/Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../Redux/Phonebook/phonebook-actions';\n\nconst Filter = ({ onChange, value }) => {\n    return (\n        <label>\n            Find contacts by name\n            <input\n                className={styles.filter__input}\n                type=\"text\"\n                name=\"search\"\n                value={value}\n                onChange={onChange}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    value: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: e => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\n\n// Components\nimport ContactForm from './Component/СontactForm/ContactForm';\nimport ContactList from './Component/ContactList/ContactList';\nimport Filter from './Component/Filter/Filter';\n\nconst App = () => {\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <ContactForm />\n\n            <h2>Contacts</h2>\n            <Filter />\n\n            <ContactList />\n        </div>\n    );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    changeFilter,\n} from '../Phonebook/phonebook-actions';\n\nconst items = createReducer([], {\n    [fetchContactsSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n    error,\n});\n\n// const initialItems = [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\n// const items = (state = initialItems, { type, payload }) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload];\n\n//         case types.DELETE:\n//             return state.filter(({ id }) => id !== payload);\n\n//         default:\n//             return state;\n//     }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//     switch (type) {\n//         case [actions.changeFilter]:\n//             return payload;\n\n//         default:\n//             return state;\n//     }\n// };\n","import {\n    configureStore,\n    getDefaultMiddleware,\n    // combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    // persistStore,\n    // persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport phonebookReducer from '../Redux/Phonebook/phonebook-reducer';\n\n// Прослойка\n// const myMiddleware = store => next => action => {\n//     console.log('Моя прослойка!', action);\n\n//     next(action);\n// };\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n];\n\n// const itemsPersistConfig = {\n//     key: 'items',\n//     storage,\n//     blacklist: ['filter'],\n// };\n\nconst store = configureStore({\n    reducer: {\n        // phonebook: persistReducer(itemsPersistConfig, phonebookReducer),\n        phonebook: phonebookReducer,\n    },\n    devTools: process.env.NODE_ENV === 'development',\n    middleware,\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './Redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            {/* <PersistGate loading={null} persistor={store.persistor}> */}\n            <App />\n            {/* </PersistGate> */}\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__input\":\"ContactForm_form__input__1wcVG\",\"form__button\":\"ContactForm_form__button__1c0Ls\"};"],"sourceRoot":""}